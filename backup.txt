        private void CheckImage(Bitmap G)
        {
   

            unsafe
            {
                Color R = Color.FromArgb(255, 0, 0);
                Color B = Color.FromArgb(0, 0, 0);
                Color W = Color.FromArgb(255, 255, 255);
                int countblack = 0;
                int countwhite = 0;
                int x;

                BitmapData bitmapData = G.LockBits(new Rectangle(0, 0, G.Width, G.Height), ImageLockMode.ReadWrite, G.PixelFormat);
                int bytesPerPixel = System.Drawing.Bitmap.GetPixelFormatSize(G.PixelFormat) / 8;
                int heightInPixels = bitmapData.Height;
                int widthInBytes = bitmapData.Width * bytesPerPixel;
                byte* PtrFirstPixel = (byte*)bitmapData.Scan0;

                Parallel.For(0, heightInPixels, y =>
                {
                    byte* currentLine = PtrFirstPixel + (y * bitmapData.Stride);
                    for (x = 0; x < widthInBytes; x = x + bytesPerPixel)
                    {
                        int oldBlue = currentLine[x];
                        int oldGreen = currentLine[x + 1];
                        int oldRed = currentLine[x + 2];
                        if (oldBlue==0 && oldGreen==0 && oldRed==255)
                        {
                            for(int z=x+(2*bytesPerPixel+2);z<widthInBytes; z = z + bytesPerPixel)
                            {
                                //Console.WriteLine("Z: "+z);
                                currentLine = PtrFirstPixel + (y * bitmapData.Stride);
                                int oldBlueT = currentLine[z];
                                 int oldGreenT = currentLine[z + 1];
                                 int oldRedT = currentLine[z + 2];

                                if (oldBlueT == 255 && oldGreenT == 255 && oldRedT == 255)
                                {
                                    countwhite++;
                                }

                                if(oldBlueT == 0 && oldGreenT == 0 && oldRedT == 0)
                                {
                                    countblack++;
                                }

                                if (oldBlueT == 0 && oldGreenT == 0 && oldRedT == 255)
                                {
                                    break;
                                }
                            }
                        }
                    }
                });
                whitepercent = (double)countwhite / (countblack + countwhite) * 100;
                blackpercent = (double)countblack / (countblack + countwhite) * 100;
                Console.WriteLine("Whitepx: " + countwhite + " Blakpx: " + countblack);
                Console.WriteLine("Black percent: " + blackpercent);
                Console.WriteLine("White percent: " + whitepercent);
            }
          

        }